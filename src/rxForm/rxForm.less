@import 'vars';

<<<<<<< HEAD
/*
 # rxForm
 */
=======
.inputBorderPadding() {
    border: 1px solid @inputBorder;
    padding: 3px 5px;
}
>>>>>>> style(form): update border/spacing for input/select fields

.rx-form {
    margin: 15px 0 0;
}

.form-item {
    margin-top: 5px;
}

.form-description,
.form-item {
    margin-bottom: 15px;
}

.field-label,
.field-legend, {
    width: @fieldLabelWidth;
    text-align: left;
    float: left;
    color: @subduedTitle;
    font-size: 1.1em;
    // Re-align so that the middle lines up with the form field
    margin: 5px 0;
}

/*
## Input fields

field-prefix, field-suffix and field-description are optional.

```
<div class="form-item">
    <label>
        <span class="field-label">
            Display Name:
        </span>

        <span class="field-prefix">$</span>

        <!-- Form input will be added here -->
        <span class="field-input">
            <input type="text"/>
        </span>

        <span class="field-suffix">GB</span>

        <span class="field-description">Any description goes here</span>
    </label>
</div>
```

## Dropdowns

```
<div class="form-item">
    <label>
        <span class="field-label">
            Type:
        </span>

        <span class="field-prefix">$</span>

        <!-- Form input will be added here -->
        <span class="field-input">
            <span class="field-select">
                <select>
                    <option value="1">Option #1</option>
                    <option value="2">Option #2</option>
                    <option value="3">Option #3</option>
                    <option value="4">Option #4</option>
                </select>
            </span>
        </span>

        <span class="field-description">Any description goes here</span>
    </label>
</div>
```

## Submit buttons

```
<button class="submit form-action" type="submit" disabled="disabled">
    Submit Form (Disabled)
</button>

<button class="submit form-action" type="submit">
    Submit Form
</button>

```

 */

.field-input {
    input,
    select {
        color: @inputColor;
        font-size: 1.2em;
        border-radius: 0;
    }

    input,
    .field-select {
        // leave some room for prefix/suffix if the field width is wider than the container width
        max-width: 65%;
        background: @white;
    }

    input {
        width: @fieldInputWidth;
        .inputBorderPadding;

        &[type="number"] {
            width: @fieldInputNumberWidth;
        }

        &[type="radio"],
        &[type="checkbox"] {
            width: auto;
            vertical-align: middle;
        }
    }

    .field-select {
        display: inline-block;
        position: relative;
        width: @fieldSelectWidth;

        select {
            width: 100%;
            // make sure arrow can show through
            background: transparent;
            // Remove default arrow
            -webkit-appearance: none;
            // @bugfix FF doesn't like 'none'
            // @see https://bugzilla.mozilla.org/show_bug.cgi?id=649849
            -moz-appearance: window;
            position: relative;
            z-index: 2;
            .inputBorderPadding;
        }

        &:before {
            content: ".";
            width: 0;
            height: 0;
            font-size: 0;
            display: block;
            position: absolute;
            border: 7px solid transparent;
            border-top-color: @inputBorder;
            border-bottom: none;
            top: 50%;
            margin-top: -4px;
            right: 9px;
        }
    }
}

/*
 * @bugfix Because of '-moz-appearance: window', the border/padding is removed from the select box.
 * This adds it back
 * @see http://stackoverflow.com/questions/5912791/how-to-remove-the-arrow-from-a-select-tag-in-firefox
 */
 @-moz-document url-prefix() {
    .field-select {
        .inputBorderPadding;
    }
}

/*
 * @bugfix Input field is marked as invalid before a user has done anything on form
 * @browsers FF
 * @see http://stackoverflow.com/questions/17209057/firefox-draws-red-border-on-required-select-box
 */
.ng-pristine .field-input .ng-invalid-required {
    box-shadow: none;
}

.field-prefix,
.field-suffix {
    font-size: 1.2em;
    color: @subduedTitle;
}
.field-prefix {
    margin: -5px 5px 0 0;
}
.field-suffix {
    margin-left: 5px;
}

.field-description {
    color: @subduedTitle;
    font-size: 0.8em;
    font-style: italic;
    display: block;
    color: @inputColor;
    margin: 5px 0 0 @fieldLabelWidth;
    max-width: 50em;
}

.option-table {
    // we want the table to not look ugly when stretched across the screen
    width: auto;
    // we also want a semi-consistent width
    min-width: 40em;

    td {
        // remove default padding from td's so that we can make the label take up the full room
        padding: 0;
    }
    label {
        // add padding to labels so they take up the entire cell's space
        display: block;
        padding: @tableCellPadding;
        cursor: pointer;
    }
    .option-table-input {
        text-align: center;
        line-height: 0;
    }
    .current td {
        color: #3AB661;
    }
    // @note KL: I'd like to stick with just adding the background to the <tr>, but
    // we need to make the selector more specific to override the table-stripe styles.
    .selected td {
        background: @tableRowSelected;
        border-color: #bad4bb;
        // this 'double' makes it so that the border-color applies to the top border as well
        // @see http://stackoverflow.com/questions/7942212/css-table-row-border-color-with-border-collapse
        border-style: double;
    }
}

.rx-form-fieldset {
    .field-input {
        top: 0;
    }

    .option-table {
        min-width: 100%;
    }

    .form-item {
        margin-top: 0;
    }
}

.form-actions {
    padding: 20px 0;
}

.form-action {
    background: transparent;
    margin: 0;
    padding: 0;
    border: 0;
    font-size: inherit;
    cursor: pointer;
    font-size: 1.2em;

    &.submit {
        color: @actionGreen;
        margin-right: 1em;
        &:hover,
        &:focus {
            color: @actionGreenHover;
        }
        &[disabled="disabled"] {
            color: @subduedText;
            cursor: not-allowed;
        }
    }
    &.cancel {
        color: @subduedText;
        &:hover,
        &:focus {
            color: @subduedTextHover;
        }
    }
}